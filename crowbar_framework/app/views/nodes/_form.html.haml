.box
  -# Rails 2 needs - and Rails 3 needs =
  - form_for :node, :'data-remote' => true, :url => update_node_path(@node.handle), :html => { :'data-type' => 'html', :'data-method' => 'put', :id => 'update_node_form', :class => "formtastic" } do |f|
    %fieldset.inputs
      %ol
        %li.text
          = f.label :alias, t('.alias')
          = text_field_tag :alias, @node.alias(true), :size => 20
        %li.text
          = f.label :description, t('.description')
          = text_field_tag :description, @node.description(true), :size => 40
        %li.text
          = f.label :group, t('.group')
          - if @node.display_set?('group')
            = text_field_tag :group, @node.group, :size => 20
          - else
            %p
              = "#{t '.default'}: "
              %b= @node.group
            %p
              = " #{t '.override'} "
              = text_field_tag :group, @node.group(true), :size => 20
        %li.select
          = f.label :bios, t('.bios')
          -if @node.admin?
            = t 'na'
          -elsif @options[:show].include? :bios
            = select_tag :bios, options_for_select(option_default(@options[:bios], @node.bios_set, 'bios'), @node.bios_set)
          -else
            = t 'feature_na'
        %li.select
          = f.label :raid, t('.raid')
          -if @node.admin?
            = t 'na'
          -elsif @options[:show].include? :raid and !@node.admin?
            = select_tag :raid,  options_for_select(option_default(@options[:raid], @node.raid_set, 'raid'), @node.raid_set)
          -else
            = t 'feature_na'
        %li.select
          = f.label :installation_drives, t('.installation_drives')
          -if @node.admin?
            = t 'na'
          -elsif @options[:show].include? :installation_drives and !@node.admin?
            = select_tag :installation_drives, options_for_select(option_default(@options[:installation_drives], @node.installation_drives_set, 'installation_drives'), @node.installation_drives_set)
          -else
            = t 'feature_na'
        %li.select
          = f.label :software_raid, t('.software_raid')
          -if @node.admin?
            = t 'na'
          -elsif @options[:show].include? :software_raid and !@node.admin?
            = select_tag :software_raid, options_for_select(option_default(@options[:software_raid], @node.software_raid_set, 'software_raid'), @node.software_raid_set)
          -else
            = t 'feature_na'
    %fieldset.buttons
      %ol
        -unless @node.allocated? or @node.admin?
          %li
            %input.button{:type => "submit", :name => "submit", :value => t('.allocate')}
        %li
          %input.button{:type => "submit", :name => "submit", :value => t('.save')}

